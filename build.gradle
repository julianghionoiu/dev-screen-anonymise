//~~~~ Settings for Gradle
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1"
        classpath 'us.kirchmeier:gradle-capsule-plugin:1.0.2'
        classpath 'ch.netzwerg:gradle-release-plugin:1.2.4'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'java'
apply plugin: 'application'

group 'ro.ghionoiu'

//noinspection GroovyUnusedAssignment
targetCompatibility = JavaVersion.VERSION_1_8
//noinspection GroovyUnusedAssignment
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

/**
 * Design:
 * Humble-video is composed of two jar files _noarch + native.
 * The _noarch contains the API while the native jar contains
 * the JNI libraries required to interface with the Native codecs
 *
 * So:
 * - the capsule is configured to only download the artifact required for that platform
 * - the test includes all the native libraries to be cross-platform
 * - there is no native library configured for the compile target
 */
ext {
    humbleVideoVersion = '0.2.1'
}

dependencies {
    compile 'io.humble:humble-video-noarch:'+humbleVideoVersion
    compile 'com.beust:jcommander:1.72'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compileOnly 'org.projectlombok:lombok:1.16.16'
    compile 'org.bytedeco:javacv-platform:1.3.2'

    testCompile('junit:junit:4.11'){
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompileOnly 'org.projectlombok:lombok:1.16.16'
}

// ~~~~~ Packaging

apply plugin: 'us.kirchmeier.capsule'

mainClassName = "tdl.anonymize.AnonymizeApp"
jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task mavenCapsule(type: MavenCapsule){
    applicationClass mainClassName

    capsuleManifest {
        minJavaVersion = '1.8.0'
        dependencyConfiguration configurations.compile
        repositories << 'jcenter'
    }
}

// ~~~~~ Gather coverage

apply plugin: "jacoco"
apply plugin: "com.github.kt3k.coveralls"

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

// ~~~~~ Dependency too big, just package from the start.

apply plugin: 'com.github.johnrengelman.shadow'
jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}